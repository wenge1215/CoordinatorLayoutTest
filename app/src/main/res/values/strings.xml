<resources>
    <string name="app_name">CoordinatorLayoutTest</string>
    <string name="text">1、在CollapsingToolbarLayout中：

我们设置了layout_scrollFlags:关于它的值我这里再说一下：

    scroll - 想滚动就必须设置这个。
    enterAlways - 实现quick return效果, 当向下移动时，立即显示View（比如Toolbar)。
    exitUntilCollapsed - 向上滚动时收缩View，但可以固定Toolbar一直在上面。
    enterAlwaysCollapsed - 当你的View已经设置minHeight属性又使用此标志时，你的View只能以最小高度进入，只有当滚动视图到达顶部时才扩大到完整高度。

其中还设置了一些属性，简要说明一下：

    contentScrim - 设置当完全CollapsingToolbarLayout折叠(收缩)后的背景颜色。
    expandedTitleMarginStart - 设置扩张时候(还没有收缩时)title向左填充的距离。

没扩张时候如图：

        2、在ImageView控件中：

我们设置了：

    layout_collapseMode (折叠模式) - 有两个值:
            pin -  设置为这个模式时，当CollapsingToolbarLayout完全收缩后，Toolbar还可以保留在屏幕上。
            parallax - 设置为这个模式时，在内容滚动时，CollapsingToolbarLayout中的View（比如ImageView)也可以同时滚动，实现视差滚动效果，通常和layout_collapseParallaxMultiplier(设置视差因子)搭配使用。
    layout_collapseParallaxMultiplier(视差因子) - 设置视差滚动因子，值为：0~1。

3、在Toolbar控件中：
我们设置了layout_collapseMode(折叠模式)：为pin。

综上分析：当设置了layout_behavior的控件响应起了CollapsingToolbarLayout中的layout_scrollFlags事件时，ImageView会有视差效果的向上滚动移除屏幕，当开始折叠时CollapsingToolbarLayout的背景色(也就是Toolbar的背景色)就会变为我们设置好的背景色，Toolbar也一直会固定在最顶端。
效果如图:</string>
</resources>
